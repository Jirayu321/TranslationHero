{"ast":null,"code":"import { useValidation, validateDate } from '@mui/x-date-pickers/internals';\nimport { isRangeValid, parseRangeInputValue } from '../../utils/date-utils';\nexport const validateDateRange = _ref => {\n  let {\n    props,\n    value,\n    adapter\n  } = _ref;\n  const [start, end] = value; // for partial input\n\n  if (start === null || end === null) {\n    return [null, null];\n  }\n\n  const dateValidations = [validateDate({\n    adapter,\n    value: start,\n    props\n  }), validateDate({\n    adapter,\n    value: end,\n    props\n  })];\n\n  if (dateValidations[0] || dateValidations[1]) {\n    return dateValidations;\n  }\n\n  if (!isRangeValid(adapter.utils, parseRangeInputValue(adapter.utils, value))) {\n    return ['invalidRange', 'invalidRange'];\n  }\n\n  return [null, null];\n};\n\nconst isSameDateRangeError = (a, b) => b !== null && a[1] === b[1] && a[0] === b[0];\n\nexport const useDateRangeValidation = props => {\n  return useValidation(props, validateDateRange, isSameDateRangeError);\n};","map":{"version":3,"names":["useValidation","validateDate","isRangeValid","parseRangeInputValue","validateDateRange","props","value","adapter","start","end","dateValidations","utils","isSameDateRangeError","a","b","useDateRangeValidation"],"sources":["/Users/jirayuyungmeesuk/Desktop/translate-hero/client/node_modules/@mui/x-date-pickers-pro/internal/hooks/validation/useDateRangeValidation.js"],"sourcesContent":["import { useValidation, validateDate } from '@mui/x-date-pickers/internals';\nimport { isRangeValid, parseRangeInputValue } from '../../utils/date-utils';\nexport const validateDateRange = ({\n  props,\n  value,\n  adapter\n}) => {\n  const [start, end] = value; // for partial input\n\n  if (start === null || end === null) {\n    return [null, null];\n  }\n\n  const dateValidations = [validateDate({\n    adapter,\n    value: start,\n    props\n  }), validateDate({\n    adapter,\n    value: end,\n    props\n  })];\n\n  if (dateValidations[0] || dateValidations[1]) {\n    return dateValidations;\n  }\n\n  if (!isRangeValid(adapter.utils, parseRangeInputValue(adapter.utils, value))) {\n    return ['invalidRange', 'invalidRange'];\n  }\n\n  return [null, null];\n};\n\nconst isSameDateRangeError = (a, b) => b !== null && a[1] === b[1] && a[0] === b[0];\n\nexport const useDateRangeValidation = props => {\n  return useValidation(props, validateDateRange, isSameDateRangeError);\n};"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,YAAxB,QAA4C,+BAA5C;AACA,SAASC,YAAT,EAAuBC,oBAAvB,QAAmD,wBAAnD;AACA,OAAO,MAAMC,iBAAiB,GAAG,QAI3B;EAAA,IAJ4B;IAChCC,KADgC;IAEhCC,KAFgC;IAGhCC;EAHgC,CAI5B;EACJ,MAAM,CAACC,KAAD,EAAQC,GAAR,IAAeH,KAArB,CADI,CACwB;;EAE5B,IAAIE,KAAK,KAAK,IAAV,IAAkBC,GAAG,KAAK,IAA9B,EAAoC;IAClC,OAAO,CAAC,IAAD,EAAO,IAAP,CAAP;EACD;;EAED,MAAMC,eAAe,GAAG,CAACT,YAAY,CAAC;IACpCM,OADoC;IAEpCD,KAAK,EAAEE,KAF6B;IAGpCH;EAHoC,CAAD,CAAb,EAIpBJ,YAAY,CAAC;IACfM,OADe;IAEfD,KAAK,EAAEG,GAFQ;IAGfJ;EAHe,CAAD,CAJQ,CAAxB;;EAUA,IAAIK,eAAe,CAAC,CAAD,CAAf,IAAsBA,eAAe,CAAC,CAAD,CAAzC,EAA8C;IAC5C,OAAOA,eAAP;EACD;;EAED,IAAI,CAACR,YAAY,CAACK,OAAO,CAACI,KAAT,EAAgBR,oBAAoB,CAACI,OAAO,CAACI,KAAT,EAAgBL,KAAhB,CAApC,CAAjB,EAA8E;IAC5E,OAAO,CAAC,cAAD,EAAiB,cAAjB,CAAP;EACD;;EAED,OAAO,CAAC,IAAD,EAAO,IAAP,CAAP;AACD,CA9BM;;AAgCP,MAAMM,oBAAoB,GAAG,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,KAAK,IAAN,IAAcD,CAAC,CAAC,CAAD,CAAD,KAASC,CAAC,CAAC,CAAD,CAAxB,IAA+BD,CAAC,CAAC,CAAD,CAAD,KAASC,CAAC,CAAC,CAAD,CAAhF;;AAEA,OAAO,MAAMC,sBAAsB,GAAGV,KAAK,IAAI;EAC7C,OAAOL,aAAa,CAACK,KAAD,EAAQD,iBAAR,EAA2BQ,oBAA3B,CAApB;AACD,CAFM"},"metadata":{},"sourceType":"module"}