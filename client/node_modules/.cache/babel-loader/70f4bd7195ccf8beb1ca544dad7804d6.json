{"ast":null,"code":"import * as api from \"../../Api/api\";\nexport const LOGIN_USER_SUCCESS = \"LOGIN_USER_SUCCESS\";\nexport const LOGIN_USER_FAIL = \"LOGIN_USER_FAIL\";\nexport const REGISTER_USER_SUCCESS = \"REGISTER_USER_SUCCESS\";\nexport const REGISTER_USER_FAIL = \"REGISTER_USER_FAIL\";\nexport const loginUser = authData => {\n  const {\n    email,\n    password\n  } = authData;\n  return async dispatch => {\n    try {\n      const check = (x, y) => {\n        const {\n          email\n        } = api === null || api === void 0 ? void 0 : api.fetchData();\n\n        if (x === email && y === password) {\n          dispatch({\n            type: LOGIN_USER_SUCCESS,\n            payload: data\n          });\n          return 1;\n        } else {\n          console.log(\"e =>\", x, y);\n          dispatch({\n            type: LOGIN_USER_FAIL\n          });\n        }\n      };\n\n      const result = await check(email, password);\n      console.log(\"Login Data >\", result);\n      const resultData = await result; // console.log('Shop data', resultData)\n      //\n      // console.log(resultData.data.data.shop)\n\n      return resultData;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\nexport const RegisterUser = authData => {\n  const {\n    email,\n    password,\n    sex,\n    date,\n    country,\n    Conditions\n  } = authData;\n  return async dispatch => {\n    try {\n      const check = i => {\n        if (i) {\n          dispatch({\n            type: REGISTER_USER_SUCCESS,\n            payload: i\n          });\n          return i;\n        } else {\n          dispatch({\n            type: REGISTER_USER_FAIL\n          });\n        }\n      };\n\n      const result = await check(authData);\n      const resultData = await result;\n      console.log(resultData);\n      return resultData;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}; // export const PostWork = authData => {\n//   const {title, description, link, uri, num} = authData;\n//   return async dispatch => {\n//     try {\n//       const check = i => {\n//         // function getRandomInt(max) {\n//         //   return Math.floor(Math.random() * max);\n//         // }\n//         const x = num;\n//         console.log('x', x);\n//         if (i) {\n//           if (x === 0 || x === null) {\n//             dispatch({\n//               type: POST_WORK_SUCCESS,\n//               payload: i,\n//             });\n//           } else if (x === 1) {\n//             dispatch({\n//               type: POST_WORK1_SUCCESS,\n//               payload: i,\n//             });\n//           } else if (x === 2) {\n//             dispatch({\n//               type: POST_WORK2_SUCCESS,\n//               payload: i,\n//             });\n//           } else if (x === 3) {\n//             dispatch({\n//               type: POST_WORK3_SUCCESS,\n//               payload: i,\n//             });\n//           } else if (x === 4) {\n//             dispatch({\n//               type: POST_WORK4_SUCCESS,\n//               payload: i,\n//             });\n//           }\n//           return i;\n//         } else {\n//           dispatch({\n//             type: POST_EVENT_FAIL,\n//           });\n//         }\n//       };\n//       const result = await check(authData);\n//       const resultData = await result;\n//       console.log(resultData);\n//       return resultData;\n//     } catch (error) {\n//       console.log(error);\n//     }\n//   };\n// };\n// export const AddCollection = authData => {\n//   const {title, description, link, uri, num} = authData;\n//   return async dispatch => {\n//     try {\n//       const check = i => {\n//         const x = num;\n//         console.log('x', x);\n//         if (i) {\n//           if (x === 0 || x === null) {\n//             dispatch({\n//               type: ADD_COLLECTION1_SUCCESS,\n//               payload: i,\n//             });\n//           } else if (x === 1) {\n//             dispatch({\n//               type: ADD_COLLECTION2_SUCCESS,\n//               payload: i,\n//             });\n//           }\n//           return i;\n//         } else {\n//           console.log('0000');\n//         }\n//       };\n//       const result = await check(authData);\n//       const resultData = await result;\n//       console.log(resultData);\n//       return resultData;\n//     } catch (error) {\n//       console.log(error);\n//     }\n//   };\n// };\n// export const AddWork = authData => {\n//   return async dispatch => {\n//     try {\n//       const check = i => {\n//         const x = i?.num;\n//         console.log('x', x);\n//         if (i) {\n//           if (x === 0 || x === null) {\n//             dispatch({\n//               type: ADD_WORK_COLLECTION1_SUCCESS,\n//               payload: i,\n//             });\n//           } else if (x === 1) {\n//             dispatch({\n//               type: ADD_WORK_COLLECTION2_SUCCESS,\n//               payload: i,\n//             });\n//           }\n//           return i;\n//         } else {\n//           console.log('0000');\n//         }\n//       };\n//       const result = await check(authData);\n//       const resultData = await result;\n//       console.log(resultData);\n//       return resultData;\n//     } catch (error) {\n//       console.log(error);\n//     }\n//   };\n// };\n// export const DeleteWork = authData => {\n//   return async dispatch => {\n//     try {\n//       const check = i => {\n//         console.log('i',i)\n//         const x = i?.num;\n//         console.log('x', x);\n//         if (i) {\n//           if (x === 1 || x === null) {\n//             dispatch({\n//               type: DELETE_WORK_COLLECTION1_SUCCESS,\n//               payload: i,\n//             });\n//           } else if (x === 2) {\n//             dispatch({\n//               type: DELETE_WORK_COLLECTION2_SUCCESS,\n//               payload: i,\n//             });\n//           }\n//           return i;\n//         } else {\n//           console.log('0000');\n//         }\n//       };\n//       const result = await check(authData);\n//       const resultData = await result;\n//       console.log(resultData);\n//       return resultData;\n//     } catch (error) {\n//       console.log(error);\n//     }\n//   };\n// };","map":{"version":3,"names":["api","LOGIN_USER_SUCCESS","LOGIN_USER_FAIL","REGISTER_USER_SUCCESS","REGISTER_USER_FAIL","loginUser","authData","email","password","dispatch","check","x","y","fetchData","type","payload","data","console","log","result","resultData","error","RegisterUser","sex","date","country","Conditions","i"],"sources":["/Users/jirayuyungmeesuk/Desktop/translate-hero/client/src/stores/actions/user.action.js"],"sourcesContent":["import * as api from \"../../Api/api\";\n\nexport const LOGIN_USER_SUCCESS = \"LOGIN_USER_SUCCESS\";\nexport const LOGIN_USER_FAIL = \"LOGIN_USER_FAIL\";\n\nexport const REGISTER_USER_SUCCESS = \"REGISTER_USER_SUCCESS\";\nexport const REGISTER_USER_FAIL = \"REGISTER_USER_FAIL\";\n\nexport const loginUser = (authData) => {\n  const { email, password } = authData;\n  return async (dispatch) => {\n    try {\n      const check = (x, y) => {\n        const {email,} = api?.fetchData();\n        if (x === email && y === password) {\n          dispatch({type: LOGIN_USER_SUCCESS,payload: data });\n\n          return 1;\n        } else {\n          console.log(\"e =>\", x, y);\n          dispatch({\n            type: LOGIN_USER_FAIL,\n          });\n        }\n      };\n      const result = await check(email, password);\n\n      console.log(\"Login Data >\", result);\n      const resultData = await result;\n      // console.log('Shop data', resultData)\n      //\n      // console.log(resultData.data.data.shop)\n      return resultData;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const RegisterUser = (authData) => {\n  const { email, password, sex, date, country, Conditions } = authData;\n\n  return async (dispatch) => {\n    try {\n      const check = (i) => {\n        if (i) {\n          dispatch({\n            type: REGISTER_USER_SUCCESS,\n            payload: i,\n          });\n          return i;\n        } else {\n          dispatch({\n            type: REGISTER_USER_FAIL,\n          });\n        }\n      };\n      const result = await check(authData);\n      const resultData = await result;\n      console.log(resultData);\n      return resultData;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\n// export const PostWork = authData => {\n//   const {title, description, link, uri, num} = authData;\n\n//   return async dispatch => {\n//     try {\n//       const check = i => {\n//         // function getRandomInt(max) {\n//         //   return Math.floor(Math.random() * max);\n//         // }\n//         const x = num;\n//         console.log('x', x);\n//         if (i) {\n//           if (x === 0 || x === null) {\n//             dispatch({\n//               type: POST_WORK_SUCCESS,\n//               payload: i,\n//             });\n//           } else if (x === 1) {\n//             dispatch({\n//               type: POST_WORK1_SUCCESS,\n//               payload: i,\n//             });\n//           } else if (x === 2) {\n//             dispatch({\n//               type: POST_WORK2_SUCCESS,\n//               payload: i,\n//             });\n//           } else if (x === 3) {\n//             dispatch({\n//               type: POST_WORK3_SUCCESS,\n//               payload: i,\n//             });\n//           } else if (x === 4) {\n//             dispatch({\n//               type: POST_WORK4_SUCCESS,\n//               payload: i,\n//             });\n//           }\n\n//           return i;\n//         } else {\n//           dispatch({\n//             type: POST_EVENT_FAIL,\n//           });\n//         }\n//       };\n//       const result = await check(authData);\n//       const resultData = await result;\n//       console.log(resultData);\n//       return resultData;\n//     } catch (error) {\n//       console.log(error);\n//     }\n//   };\n// };\n\n// export const AddCollection = authData => {\n//   const {title, description, link, uri, num} = authData;\n\n//   return async dispatch => {\n//     try {\n//       const check = i => {\n//         const x = num;\n//         console.log('x', x);\n//         if (i) {\n//           if (x === 0 || x === null) {\n//             dispatch({\n//               type: ADD_COLLECTION1_SUCCESS,\n//               payload: i,\n//             });\n//           } else if (x === 1) {\n//             dispatch({\n//               type: ADD_COLLECTION2_SUCCESS,\n//               payload: i,\n//             });\n//           }\n//           return i;\n//         } else {\n//           console.log('0000');\n//         }\n//       };\n//       const result = await check(authData);\n//       const resultData = await result;\n//       console.log(resultData);\n//       return resultData;\n//     } catch (error) {\n//       console.log(error);\n//     }\n//   };\n// };\n\n// export const AddWork = authData => {\n//   return async dispatch => {\n//     try {\n//       const check = i => {\n//         const x = i?.num;\n//         console.log('x', x);\n//         if (i) {\n//           if (x === 0 || x === null) {\n//             dispatch({\n//               type: ADD_WORK_COLLECTION1_SUCCESS,\n//               payload: i,\n//             });\n//           } else if (x === 1) {\n//             dispatch({\n//               type: ADD_WORK_COLLECTION2_SUCCESS,\n//               payload: i,\n//             });\n//           }\n//           return i;\n//         } else {\n//           console.log('0000');\n//         }\n//       };\n//       const result = await check(authData);\n//       const resultData = await result;\n//       console.log(resultData);\n//       return resultData;\n//     } catch (error) {\n//       console.log(error);\n//     }\n//   };\n// };\n\n// export const DeleteWork = authData => {\n//   return async dispatch => {\n//     try {\n//       const check = i => {\n//         console.log('i',i)\n//         const x = i?.num;\n//         console.log('x', x);\n//         if (i) {\n//           if (x === 1 || x === null) {\n//             dispatch({\n//               type: DELETE_WORK_COLLECTION1_SUCCESS,\n//               payload: i,\n//             });\n//           } else if (x === 2) {\n//             dispatch({\n//               type: DELETE_WORK_COLLECTION2_SUCCESS,\n//               payload: i,\n//             });\n//           }\n//           return i;\n//         } else {\n//           console.log('0000');\n//         }\n//       };\n//       const result = await check(authData);\n//       const resultData = await result;\n//       console.log(resultData);\n//       return resultData;\n//     } catch (error) {\n//       console.log(error);\n//     }\n//   };\n// };\n"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,eAArB;AAEA,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AAEP,OAAO,MAAMC,qBAAqB,GAAG,uBAA9B;AACP,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B;AAEP,OAAO,MAAMC,SAAS,GAAIC,QAAD,IAAc;EACrC,MAAM;IAAEC,KAAF;IAASC;EAAT,IAAsBF,QAA5B;EACA,OAAO,MAAOG,QAAP,IAAoB;IACzB,IAAI;MACF,MAAMC,KAAK,GAAG,CAACC,CAAD,EAAIC,CAAJ,KAAU;QACtB,MAAM;UAACL;QAAD,IAAWP,GAAX,aAAWA,GAAX,uBAAWA,GAAG,CAAEa,SAAL,EAAjB;;QACA,IAAIF,CAAC,KAAKJ,KAAN,IAAeK,CAAC,KAAKJ,QAAzB,EAAmC;UACjCC,QAAQ,CAAC;YAACK,IAAI,EAAEb,kBAAP;YAA0Bc,OAAO,EAAEC;UAAnC,CAAD,CAAR;UAEA,OAAO,CAAP;QACD,CAJD,MAIO;UACLC,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBP,CAApB,EAAuBC,CAAvB;UACAH,QAAQ,CAAC;YACPK,IAAI,EAAEZ;UADC,CAAD,CAAR;QAGD;MACF,CAZD;;MAaA,MAAMiB,MAAM,GAAG,MAAMT,KAAK,CAACH,KAAD,EAAQC,QAAR,CAA1B;MAEAS,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BC,MAA5B;MACA,MAAMC,UAAU,GAAG,MAAMD,MAAzB,CAjBE,CAkBF;MACA;MACA;;MACA,OAAOC,UAAP;IACD,CAtBD,CAsBE,OAAOC,KAAP,EAAc;MACdJ,OAAO,CAACC,GAAR,CAAYG,KAAZ;IACD;EACF,CA1BD;AA2BD,CA7BM;AA+BP,OAAO,MAAMC,YAAY,GAAIhB,QAAD,IAAc;EACxC,MAAM;IAAEC,KAAF;IAASC,QAAT;IAAmBe,GAAnB;IAAwBC,IAAxB;IAA8BC,OAA9B;IAAuCC;EAAvC,IAAsDpB,QAA5D;EAEA,OAAO,MAAOG,QAAP,IAAoB;IACzB,IAAI;MACF,MAAMC,KAAK,GAAIiB,CAAD,IAAO;QACnB,IAAIA,CAAJ,EAAO;UACLlB,QAAQ,CAAC;YACPK,IAAI,EAAEX,qBADC;YAEPY,OAAO,EAAEY;UAFF,CAAD,CAAR;UAIA,OAAOA,CAAP;QACD,CAND,MAMO;UACLlB,QAAQ,CAAC;YACPK,IAAI,EAAEV;UADC,CAAD,CAAR;QAGD;MACF,CAZD;;MAaA,MAAMe,MAAM,GAAG,MAAMT,KAAK,CAACJ,QAAD,CAA1B;MACA,MAAMc,UAAU,GAAG,MAAMD,MAAzB;MACAF,OAAO,CAACC,GAAR,CAAYE,UAAZ;MACA,OAAOA,UAAP;IACD,CAlBD,CAkBE,OAAOC,KAAP,EAAc;MACdJ,OAAO,CAACC,GAAR,CAAYG,KAAZ;IACD;EACF,CAtBD;AAuBD,CA1BM,C,CA4BP;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}